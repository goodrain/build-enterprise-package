name: build-enterprise-offlice-package

on:
  workflow_dispatch:

jobs:
  build-allinone:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: login image.goodrain.com hub
        env:
          DOCKER_USERNAME: root
          DOCKER_PASSWORD: goodrain123465!
        run: echo "$DOCKER_PASSWORD" | docker login image.goodrain.com -u $DOCKER_USERNAME --password-stdin

      - name: Pull code and Build ui image
        env:
          VERSION: enterprise-2304-bs
          BRANCH: bs-2304
          ALLINONE: true
          ROUTE_MODE: history
          TRAVIS_PULL_REQUEST: false
          IMAGE_DOMAIN: image.goodrain.com
          IMAGE_NAMESPACE: goodrain
          DOCKER_USERNAME: root
          DOCKER_PASSWORD: goodrain123465!
        run: |
          git clone -b $BRANCH https://pull-code:gr123465!!@git.goodrain.com/goodrain/rainbond-ui-cloud.git
          cd rainbond-ui-cloud
          chmod +x ./build.sh
          ./build.sh

      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 yapf==0.26.0

      - name: Pull code and Build allinone image
        env:
          VERSION: enterprise-2304-bs
          BRANCH: bs-2304
          TRAVIS_PULL_REQUEST: false
          IMAGE_DOMAIN: image.goodrain.com
          IMAGE_NAMESPACE: goodrain
          DOCKER_USERNAME: root
          DOCKER_PASSWORD: goodrain123465!
        run: |
          git clone -b $BRANCH https://pull-code:gr123465!!@git.goodrain.com/goodrain/rainbond-console-cloud.git
          cd rainbond-console-cloud
          chmod +x  ./release.sh
          ./release.sh allinone

  build-operator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges.
          go-version: 1.18
      - name: install-golint
        run: |
          git clone https://github.com/golang/lint.git
          cd lint/golint
          go install

      - name: login image.goodrain.com hub
        env:
          DOCKER_USERNAME: root
          DOCKER_PASSWORD: goodrain123465!
        run: echo "$DOCKER_PASSWORD" | docker login image.goodrain.com -u $DOCKER_USERNAME --password-stdin

      - name: Build and push
        env:
          IMAGE_DOMAIN: image.goodrain.com
          IMAGE_NAMESPACE: goodrain
          VERSION: enterprise-2304-bs
          BRANCH: main
        run: |
          git clone -b $BRANCH https://github.com/goodrain/rainbond-operator.git
          cd rainbond-operator
          docker build -t $IMAGE_DOMAIN/$IMAGE_NAMESPACE/rainbond-operator:$VERSION .
          docker push $IMAGE_DOMAIN/$IMAGE_NAMESPACE/rainbond-operator:$VERSION

  build-rainbond-region:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges.
          go-version: 1.17

      - name: login image.goodrain.com hub
        env:
          DOCKER_USERNAME: root
          DOCKER_PASSWORD: goodrain123465!
        run: echo "$DOCKER_PASSWORD" | docker login image.goodrain.com -u $DOCKER_USERNAME --password-stdin

      - name: Pull code and Build the Docker image
        env:
          VERSION: enterprise-2304-bs
          BRANCH: bs-2304
          DISABLE_GOPROXY: true
          IMAGE_DOMAIN: image.goodrain.com
          IMAGE_NAMESPACE: goodrain
          DOCKER_USERNAME: root
          DOCKER_PASSWORD: goodrain123465!
        run: |
          git clone -b $BRANCH https://pull-code:gr123465!!@git.goodrain.com/goodrain/rainbond.git
          cd rainbond
          chmod +x ./release.sh
          ./release.sh all push

  build:
    needs: [build-allinone, build-rainbond-region, build-operator]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: login image.goodrain.com hub
        env:
          DOCKER_USERNAME: root
          DOCKER_PASSWORD: goodrain123465!
        run: echo "$DOCKER_PASSWORD" | docker login image.goodrain.com -u $DOCKER_USERNAME --password-stdin

      - name: Pack offline packages
        env:
          VERSION: enterprise-2304-bs
        run: chmod +x ./enterprise_offline_package.sh && ./enterprise_offline_package.sh
        
      - name: Setup aliyun oss
        uses: manyuanrong/setup-ossutil@master
        with:
          endpoint: oss-cn-shanghai.aliyuncs.com
          access-key-id: ${{ secrets.OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
          
      - name:  Push to OSS
        run: ossutil cp -rf rainbond-offline-*.tgz oss://rainbond-pkg/offline/5.3-enterprise/
