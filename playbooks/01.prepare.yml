- hosts: all
  become: true
  tasks:

  - name: 配置 root 用户免密登录
    authorized_key: user=root
                    key="{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"

  - name: 创建 Docker 用户
    ansible.builtin.user:
      name: docker
      shell: /bin/bash
      group: root
      create_home: true
      home: /home/docker

  - name: 配置 Docker 用户免密登录
    authorized_key: user=docker
                    key="{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"

  - name: 添加 AllowTcpForwarding SSH 配置
    ansible.builtin.lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^(#)?AllowTcpForwarding.*'
      line: 'AllowTcpForwarding yes'
      backrefs: yes
    register: allow_tcp_forwarding

  - name: 如果修改了 AllowTcpForwarding, 则重启 sshd
    ansible.builtin.service:
      name: sshd
      state: restarted
    when: allow_tcp_forwarding.changed

  - name: 设置 sysctl 参数
    ansible.builtin.sysctl:
      name: "{{ item.name }}"
      value: "{{ item.value }}"
      state: present
      sysctl_set: yes
      reload: yes
    with_items:
      - { name: "net.bridge.bridge-nf-call-ip6tables", value: 1 }
      - { name: "net.bridge.bridge-nf-call-iptables", value: 1 }
      - { name: "net.ipv4.ip_forward", value: 1 }
      - { name: "net.ipv4.conf.all.forwarding", value: 1 }
      - { name: "net.ipv4.neigh.default.gc_thresh1", value: 4096 }
      - { name: "net.ipv4.neigh.default.gc_thresh2", value: 6144 }
      - { name: "net.ipv4.neigh.default.gc_thresh3", value: 8192 }
      - { name: "net.ipv4.neigh.default.gc_interval", value: 60 }
      - { name: "net.ipv4.neigh.default.gc_stale_time", value: 120 }
      - { name: "kernel.perf_event_paranoid", value: -1 }
      - { name: "net.ipv4.tcp_slow_start_after_idle", value: 0 }
      - { name: "net.core.rmem_max", value: 16777216 }
      - { name: "fs.inotify.max_user_watches", value: 524288 }
      - { name: "kernel.softlockup_all_cpu_backtrace", value: 1 }
      - { name: "kernel.softlockup_panic", value: 0 }
      - { name: "kernel.watchdog_thresh", value: 30 }
      - { name: "fs.file-max", value: 2097152 }
      - { name: "fs.inotify.max_user_instances", value: 16384 }
      - { name: "fs.inotify.max_queued_events", value: 16384 }
      - { name: "vm.max_map_count", value: 262144 }
      - { name: "net.core.netdev_max_backlog", value: 16384 }
      - { name: "net.ipv4.tcp_wmem", value: '4096 12582912 16777216' }
      - { name: "net.core.wmem_max", value: 16777216 }
      - { name: "net.core.somaxconn", value: 32768 }
      - { name: "net.ipv4.ip_forward", value: 1 }
      - { name: "net.ipv4.tcp_max_syn_backlog", value: 8096 }
      - { name: "net.ipv4.tcp_rmem", value: '4096 12582912 16777216' }
      - { name: "net.ipv6.conf.all.disable_ipv6", value: 1 }
      - { name: "net.ipv6.conf.default.disable_ipv6", value: 1 }
      - { name: "net.ipv6.conf.lo.disable_ipv6", value: 1 }
      - { name: "kernel.yama.ptrace_scope", value: 0 }
      - { name: "vm.swappiness", value: 0 }
      - { name: "kernel.core_uses_pid", value: 1 }
      - { name: "net.ipv4.conf.default.accept_source_route", value: 0 }
      - { name: "net.ipv4.conf.all.accept_source_route", value: 0 }
      - { name: "net.ipv4.conf.default.promote_secondaries", value: 1 }
      - { name: "net.ipv4.conf.all.promote_secondaries", value: 1 }
      - { name: "fs.protected_hardlinks", value: 1 }
      - { name: "fs.protected_symlinks", value: 1 }
      - { name: "net.ipv4.conf.all.rp_filter", value: 0 }
      - { name: "net.ipv4.conf.default.rp_filter", value: 0 }
      - { name: "net.ipv4.conf.default.arp_announce", value: 2 }
      - { name: "net.ipv4.conf.lo.arp_announce", value: 2 }
      - { name: "net.ipv4.conf.all.arp_announce", value: 2 }
      - { name: "net.ipv4.tcp_max_tw_buckets", value: 5000 }
      - { name: "net.ipv4.tcp_syncookies", value: 1 }
      - { name: "net.ipv4.tcp_fin_timeout", value: 30 }
      - { name: "net.ipv4.tcp_synack_retries", value: 2 }
      - { name: "kernel.sysrq", value: 1 }

  - name: 设置 ulimit 参数
    ansible.builtin.copy:
      dest: /etc/security/limits.conf
      content: |
        * soft nofile 1024000
        * hard nofile 1024000
        * soft nproc 1024000
        * hard nproc 1024000
        * soft memlock unlimited
        * hard memlock unlimited
    notify: reload limits
  handlers:
  - name: reload limits
    ansible.builtin.command: "sysctl -p"

  - name: 临时关闭 swap
    ansible.builtin.command: "swapoff -a"
    changed_when: false
  - name: 永久关闭 swap
    ansible.builtin.lineinfile:
      path: /etc/fstab
      regexp: '^.*swap.*'
      state: absent
      backup: true

  - name: 关闭防火墙 (firewalld, ufw)
    ansible.builtin.systemd_service:
      name: "{{ item }}"
      state: stopped
      enabled: no
    with_items:
      - firewalld
      - ufw
    ignore_errors: true